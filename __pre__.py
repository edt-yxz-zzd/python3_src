
r'''
run me before using these packages


1. make my_py3src.pth
    so that we can access to nn_ns,seed:

    from distutils.sysconfig import get_python_lib
    get_python_lib() == r'C:\Python36\Lib\site-packages'

    C:/Python<XY>/Lib/site-packages/my_py3src.pth:
        # put this file into C:/Python<XY>/Lib/site-packages
        <path/to/python3_src>
        # encoding = locale.getpreferredencoding(False)
        # spaces are OK; should not in inside "" and ''
        C:\Program Files\按键精灵9
        E:/my_data/program_source/github/edt-yxz-zzd/python3_src

2. exec generate_set_path.py
    so that we have right-click "MS-DOS" menuitem
        and put *.bat into %PATH%

    py -m <path/to/python3_src>/windows_bat/set_path/generate_set_path.py

r'''


from distutils.sysconfig import get_python_lib
import os.path
from pathlib import Path
from runpy import run_path
import sys

class Global:
    site_packages_path = get_python_lib()
    this_fname = os.path.abspath(__file__)
    this_folder = os.path.dirname(this_fname)
    user_py_src_root = this_folder

    pth_prime_basename_without_ext = 'nn_ns_py3_src' # 'my_py3src'


    windows_bat_relative_path = 'windows_bat'
    generate_set_path_py_basename = 'generate_set_path.py'
    generate_set_path_py_path_relative_path = f'{windows_bat_relative_path}/set_path/{generate_set_path_py_basename}'
    generate_set_path_py_path = Path(user_py_src_root, generate_set_path_py_path_relative_path).resolve()
    generate_set_path_py_path = str(generate_set_path_py_path)

def generate_path_configuration_file(pth_prime_basename_without_ext):
    # path configuration file
    pth_fname = fr'{Global.site_packages_path}/{pth_prime_basename_without_ext}.pth'
    pth_fname = os.path.abspath(pth_fname)

    path_configuration_file_content = fr'''
# generated by {Global.this_fname!r}
# file name: {pth_fname!r}
# encoding = locale.getpreferredencoding(False)
# spaces are OK; should not in inside "" and ''
{Global.user_py_src_root!s}
''' # user_py_src_root!s not !r

    # bug: Path(pth_fname).write_text(path_configuration_file_content, encoding='utf8') # may not be utf8
    Path(pth_fname).write_text(path_configuration_file_content)

def run_generate_set_path():
    return run_path(Global.generate_set_path_py_path
            , run_name = '<runpy>.__run_as_main__')

if __name__ == '__main__':
    sys.path.append(Global.user_py_src_root)
    generate_path_configuration_file(Global.pth_prime_basename_without_ext)
    run_generate_set_path()

