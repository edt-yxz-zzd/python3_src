from
seed
abc
import
ABC
abstractmethod
override
final
CFG
make_CFG__hashable_name__less
S
Ts1
Ts0
t
the_py_terminal_set_ops
terminal_set_ops
terminal_set_name2terminal_set
lambda
a
make
args
kwargs
explain_ref_symbol_name
__pairs
name
0
isupper
cfg
doctest
ELLIPSIS
alternative_idx_maybe_pair2alternative_tail_idx
alternative_tail_idx2alternative_idx_maybe_pair
1
nonterminal_idx2nonterminal_name
nonterminal_idx2sorted_production_idc
nonterminal_name2nonterminal_idx
num_alternative_tails
2
num_nonterminals
num_productions
num_terminal_sets
production_idx2alternative_tail_idx
production_idx2nonterminal_idx
production_idx2production_name
production_name2production_idx
terminal_set_idx2terminal_set
terminal_set_idx2terminal_set_name
terminal_set_name2terminal_set_idx
PyTerminalSetOps
__all__
explain_ref_symbol_psidx
nonterminal_idx2ref_symbol_psidx
terminal_set_idx2ref_symbol_psidx
split
IReprHelper
verify
common_verify
is_int
is_UInt
is_pair
is_tuple
is_Sequence
is_strict_sorted_sequence
has_attrs
VerifyType
VerifyType__static
seq_tools
split_tuples
types
Mapping2Callable
collections
defaultdict
def
make_alternative_tail_idx_related_triple
production_idx2ref_symbol_psidc
idx2tail
tail2idx
put
tail
L
len
idx
setdefault
if
append
assert
return
for
ref_symbol_psidc
in
ref_symbol_psidx
reversed
make_half_bijection__hashable_name
names
idx2name
name2idx
make_nonterminal_idx2sorted_production_idc
_
range
production_idx
nonterminal_idx
enumerate
terminal_set_idx
is_nonterminal
vs
False
else
True
class
see
txt
methods
basic_make_CFG
make_CFG__hashable_name
basic_make_CFG_kwargs
make_CFG_kwargs__hashable_name
make_CFG_kwargs__hashable_name__less
staticmethod
classmethod
cls
__production_idx2pair
d
callable
pair
nonterminal_name
ref_symbol_name
__production_name2pair
terminal_set_names
nonterminal_names
production_names
nonterminal_name2count
int
ref_symbol_names
tuple
i
production_name
del
add_ref_symbol_name
add
list
set
iter_pairs
values
not
items
it
map
pass
terminal_set_name
nonterminal
ref_symbol_name2psidx
idx2psidx
None
is
dict
locals
__init__
self
is_empty
is_disjoint
this
that
contains
element
intersection
union
parser
token2terminal
bijection
container
AssertionError
___get_args_kwargs___
__dict__
__mkError
VerifyCFG
_iter_verify_object_
obj
Iter
bool
err_msg_or_f
attr_nums
attr
u
getattr
yield
UInt
r
format
is_production_idx
is_production_idx_seq
ls
of
is_nonterminal_idx
is_alternative_tail_idx
is_ref_symbol_psidx
is_maybe_pair
x
and
is_alternative_idx_maybe_pair
may_pair
alternative_tail_idx
is_strict_sorted_uint_sequence
triples
size
is_type
is_obj
array
Sequence
is_a
__name__
3
pairs
callable_attr
sequence_attr
f
c
elem
back_idx
more
sorted_production_idc
_nonterminal_idx
pidx
nidx
but
sum
miss
some
production_idc
attrs
donot
have
enough
__main__
testmod
NORMALIZE_WHITESPACE
IGNORE_EXCEPTION_DETAIL
Traceback
most
recent
call
last
lang
class_property
ParseBaseError
ParseFailError
Exception
ExplainRefSymbolName__using_terminal_set_names
also
usage
isinstance
frozenset
__call__
xsymbol_name
ITerminalSetOps
all
objects
satisfied
interface
e
ducktype
__slots__
ops
raise
NotImplementedError
other
set_obj
Ops
IOps
python
isdisjoint
get_args_for_eq_hash
__repr__
type
MessageClosureExecutor
MessageClosureExecutor_ABC
calc_CFG_inits
translate_inits
MessageClosureExecutor_ABC__using_namedtuple__str
MessageClosureExecutor__mixins__remove_checks
_M
message_interface_action_definition_str
ITerminalInit
MTerminalInit
INonterminalInit
MNonterminalInit
init
IAlternativeTailInit
MAlternativeTailInit
ABackwardT
iTerminalInit
iAlternativeTailInit
ABackwardN
iNonterminalInit
AUpward
message
mkITerminalInit
mkINonterminalInit
mkIAlternativeTailInit
action
msg_TerminalInit
msg_AlternativeTailInit
try
except
pprint
interface2messages
init0
__ABackwardX
msg_NonterminalInit
init1
max_init_length
mkMAlternativeTailInit
mkMNonterminalInit
__iter_initial_xmessages
super
initial_xmessages
mkMTerminalInit
zip
mkAUpward
lhs_alternative_tail_idx
continue
rhs_alternative_tail_idx
idx2intf
mkA
mkABackwardN
mkABackwardT
collect
nonterminal_idx2inits
alternative_tail_idx2inits
execute_until_closure
messages
get
inits
_t
namedtuple
now
change
to
IT
IA
MA
hash
print
__max_init_length
__context_free_grammar
input
context_free_grammar
output
where
maxL
executor
rule_name2inits
alternative_name2initss
nonterminal_name2inits
production_name2initss
idx_inits2name_inits
idx_inits
idx_init2name_init
idx_init
__getitem__
handle_alternative_tail_idx
name_inits
while
_test
rule_name_ixsymbols_pairs
Main
OP3
OP2
FilteredRefName
OP2_FilteredRefName
OP3_FilteredRefName
Discard
Unit
UnitUnpack
Tuple
TupleWithAlias
Production
productions2basic_productions
collect_lhs_defined_nonterminal_names
collect_rhs_ref_symbol_names
collect_filter_ex_names
collect_filter_names
remove_duplicated_productions
collect_duplicated_actions
helper
repr_input
repr_helper_ex
is_Mapping
is_Hashable
Hashable
enum
Enum
itertools
chain
chains
from_iterable
OP_UNPACK
OP_SELECT
OP_DISCARD
AbstractSyntaxDataTypeRelated
get_arg_names
get_args
repr_helper
__hash__
id
__eq__
or
arg_names_in_str
property
PartType
filter_names
op2
filtered_ref_name
op3
is_nonterminal_name
ProductionBase
to_basic_production
can
be
used
as
hashable
user
remove
duplicated
productions
reduction
filters
are
the
same
besides
basic_production
iter_rhs_ref_symbol_names
maybe_get_lhs_filter_ex_name
filter_ex_name
iter_rhs_filter_names
filter_name
get_rhs_length
__rhs_eval__
filter_name2func
child_lazy_values
value
eval
filter_ex_name2func
Lch
Lrhs
TypeError
length
mismatch
result
may_filter_ex_name
apply_filters
g
A
filtered_ref_names
of_type
B
NOTE
filtered_ref_names_left
filtered_ref_names_right
iter_rhs_filtered_ref_names
C
D
E
concrete
syntax
require
at
least
one
distinguish
with
op3_filtered_ref_names
op3_filtered_ref_name
_eval
child_lazy_value
elif
extend
logic
error
op2_filtered_ref_names
op2_filtered_ref_name
is_selected
h
d1
d2
since
unpack
dangerous
rhs
alias_names
alias_name2idx
idx2aliass
alias
allow
point
discard
ValueError
out
index
__idx2aliass
assume
sortable
bug
hargs
all_args
idx2production
production2idx
production
basic_production2productions
bads
p
Set
definition
concrete_CFG_syntax
more_simplified_concrete_CFG_syntax
basic_parse__more_simplified_version
iter_tokenize__more_simplified_version
nn_ns
Tokenizer
ITokenizer
TokenizerBaseError
TokenizerFailError
biregex
BiPatternABC__directly
BiPatternABC__directly__same
errors
tokenize__simplified_version
iter_tokenize__simplified_version
abstract_syntax_datatype
Token
to_splited_source
biregex_dict
BiPatternHereSame
globals
terminal_set_name_decl
pattern_fmt
Tn
op2_name
n
stmt
good_prefix_on_fail
terminal2superchar
filter
kw_terminal_set
T
op_semicolon
op_colon
op_discard
op_selected
source
token
terminal_name
terminal
s
simplified
version
more_simplified
tuple_productions
undefined_xsymbol_names
tokens
superstring
join
m
precise_regex
fullmatch
match
regex
end
incomplete
statement
EOF
bad_token
bad
xsymbol_names
iter_substring_between
begin
substring
prev_end
finditer
start
update
def_name_pos
rhs_begin
no
both
tuple_production
simplified_concrete_CFG_syntax
complete_concrete_CFG_syntax
without_template_case_branch_count_noise
count
has
no_noise
noise
template
case_set
alternative
branch
op_bar
comment
start_nonterminal
maybedead_nonterminal
OR_DiscardBody
OR_UnitBody
OR_UnitUnpackBody
OR_TupleBody
OR_TupleWithAliasBody
ambiguous_nonterminal
terminal_set
ignore
b
w
filter_ex
decorator
kw_start_nonterminal
kw_ambiguous_nonterminal
kw_maybedead_nonterminal
kw_pass
kw_any
any
kw_none
none
op_eq
op_unpack
op_multi
op_many0
op_many1
op_optional
empty
remove_Nones
Definition
DefinitionBody
EmptyDef
TerminalSetDecl
StartNonterminalDecl
AmbiguousNonterminalDecl
MaybedeadNonterminalDecl
mk_terminal_set_names
mk_start_nonterminal_names
mk_ambiguous_nonterminal_names
mk_maybedead_nonterminal_names
mk_discard
def_name
DiscardBodys1
DiscardBody
ref_name
below
defined
mk_unit
filtered_def_name
UnitBodys1
UnitBody
mk_unit_body_from_name
mk_unit_body_from_triple
mk_unit_unpack
UnitUnpackBodys1
UnitUnpackBody
mk_unit_unpack_body
mk_tuple
TupleBodys1
TupleBody
may_op2_filtered_ref_name
mk_tuple_with_alias
filtered_ex_def_name
TupleWithAliasBodys1
TupleWithAliasBody
decorated_ref_name
const_True
const_False
may_op2
const_neg1
mk_kw_ref_name
mk_user_ref_name
mk_multi_ref_name
multi_op
mk_multi_op
subset
decorators
inside
lhs
only
unit
unit_unpack
tuple_with_alias
allowed
optional
they
MUST
use
parse
over
t_decl
fr
above
pattern
tokenize
char
repr
superregex
to_unit
Definitions0
terminal_set_names0
op2_ref_names0
filters0
op2_ref_name
lnk2list
lnk_op2_ref_names0
lnk_op2_ref_names1
lnk_terminal_set_names0
lnk_terminal_set_names1
lnk_filters0
lnk_filters1
lnk_Definitions0
lnk_Definitions1
TODO
complete
with_template_case_branch_count_noise
NoiseDecl
AtomicDisjointCaseSetDecl
NonAtomicCaseSetDef
atomic_case_set
case_set_name
template_name
arg_name
decl_case_var
define
body
case_set_ref_name
external_template_name
case_var_name
make_CFG_ex
start_nonterminal_names
ambiguous_nonterminal_names
maybedead_nonterminal_names
__doc__
production_name2production
filter_ex_names
start_nonterminal_idc
sorted
ambiguous_nonterminal_idc
come
here
make_nonterminal_names_and_check_post_parse_args__distinguishable_ref_symbol_name
diff
actions
basic_production2production
basic_productions
production_name2basic_production
_set_make_CFG_ex_doc
sep
20
sepline
lhs_defined_nonterminal_names
rhs_ref_symbol_names
both_xsymbol_names
exist
parse__more_simplified_version__ver1
allowed_undefined_nonterminal_names
production_idx2filter_names
production_idx2selected_idc
undefined
not_allowed
selected_idc
__handle_op2_filtered_ref_names
parse__more_simplified_version__ver2
make_CFG
str
which
satisfy
more_simplified_version
ver1
using
ver2
after
we
text
post_parse
Parser
parse_CFG
eval_parse_result_node
__iter_tokens
token2terminal_name
find_terminal_set_idc
token2value
default
undefined_production_names
undefined_filter_names
undefined_filter_ex_names
tree
production_idx2reduction
make_production_idx2reduction
node
make_production_reduction
LazyValue
ProductionReduction
child_values
grammar_in_more_simplified
lnk_Ts1
lnk_Ts0
lnk
reverse
6
o
__substring
sub
60
tokenizer__simplified_version
ECHO
INITIAL
with_state
RecognizerABC__using_biregex
RecognizerABC__using_biregex__directly
Tokenizer_with_state
__abstractmethods__
recognizer_dict
_R
__class__
allow_empty
why
abstract
easier
merge
together
precondition_states
to_state
iter_tokens
regex_match_result
string
fill_recognizer_dict
_remove_tokens
sys
modules
EvalParseResultTreeNode
ParseTreeNonleafNode
ParseTreeLeafNode
outdated
leaf_eval
child_value
production_idx2eval
__eval_leaf
__eval_nonleaf
leaf
nonleaf
children
start_nonterminal_name
start_nonterminal_idx
4
iter
NotTreeError
NotExistsError
ParserMessageClosureExecutor
show_MessageClosureExecutor
NotTreeError__recur
NotTreeError__ambiguous
terminal_position_begin
terminal_position_end
__cfg
symbol
extract_parse_main_tree
extract_parse_local_tree
ambiguous
then
prefer
avoid
child
parse_result_tree
exception
fail
than
possibles
recur
max_required_terminal_position
dead
feed
fail_position
terminal_position
downward
forward
generate
IDownwardNonterminal_
MDownwardNonterminal_
IDownwardProduction_
MDownwardProduction_
IDownwardAlternativeTail_
MDownwardAlternativeTail_
IDownwardTerminal_
MDownwardTerminal_
IForwardAlternativeTail_
MForwardAlternativeTail_
terminal_position_middle
store
IStoreTerminal
MStoreTerminal
IStoreNonterminal
MStoreNonterminal
IStoreProduction
MStoreProduction
IStoreAlternativeTail
MStoreAlternativeTail
discover
IStoreNonterminal_
IStoreProduction_
IStoreAlternativeTail_
choice
IStoreNonterminalChoice
IStoreNonNullAlternativeTailChoice
MStoreNonNullAlternativeTailChoice
on
XXX
should
AOnDownwardNonterminal_
iDownwardNonterminal_
AOnDownwardProduction_
iDownwardProduction_
AOnDownwardAlternativeTail_
iDownwardAlternativeTail_
AOnDownwardTerminal_
iDownwardTerminal_
AOnForwardAlternativeTail_
iForwardAlternativeTail_
upward
AUpwardToProduction
iStoreAlternativeTail_
AUpwardToNonterminal
iStoreProduction_
AUpwardFromNonterminal
iStoreNonterminal_
AUpwardFromTerminal
iStoreTerminal
backward
ABackwardTerminal
ABackwardNonterminal
iStoreNonterminal
AOn
AOnIStoreNonNullAlternativeTailChoice
iStoreNonNullAlternativeTailChoice
maked
when
occur
handled
by
auto
AAutoNullAlternativeTail
__token2terminal_name
terminal_set_idc
__find_terminal_set_idc
prev
terminal_position2terminal
mk
msgStoreTerminal
unrecognize
position
msgDownwardNonterminal_
msgDownwardProduction_
msgDownwardAlternativeTail_
tiny
print_err
msgDownwardTerminal_
null
msgForwardAlternativeTail_
rhs_iStoreAlternativeTail_
msgStoreAlternativeTail
msgStoreProduction
msgStoreNonterminal
msg
let
check_nonterminal_idx
__restart_init
__ambiguous_nonterminal_idc
restart
before
put_message
__debug__
toberemove
_MessageClosureExecutor_ABC__with_data__xmessage_queue
forest
on_err
nonterminal_idc
err_msg
success
MultiStartNonterminalError
too
many
iStoreNonterminalChoice
queries
_nonterminal2node
__to_tree_preprocess
allow_ambiguous
go
_terminal2node
__handle_ambiguous_nonterminal_idx
__is_empty_production
__is_empty_alternative_tail_idx
a_message
message_constructor
message2constructor
_production2children
iStoreProduction
find
arbitrary
two
nonemtpy
alternative_tail_idc
submessages
submessage
_alternative_tail2linked_nodes
unknown
__is_allowed_ambiguous_production_idx
__is_allowed_ambiguous_nonterminal_idx
Node
iStoreAlternativeTail
linked_list
_asdict
_ref_symbol_psidx2node
rhs_iStoreAlternativeTail
rhs_linked_list
make_parse_example_result
line
reformat_py_source
easy_print_for_namedtuple
indent
depth
file
