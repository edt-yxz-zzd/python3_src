
__all__ = '''
    make_rule_action_for_all_many1_XOTs_iappendright
    basic_make_rule_action_for_all_many1_XOTs_iappendright
    '''.split()

from .imports import set_attrs
from .parse_triples_in_str import parse_triples_in_str
from .make_rule_inject_to import make_rule_inject_to
from .handle_rule_many01 import (
    handle_many1_iappendright
    )


def make_rule_action_for_all_many1_XOTs_iappendright(
    locals, triples_in_str:str
    ):
    r'''
with a special_last element
    e.g. OP_join_Args1 = (Arg OP)* Arg

A - a element
T - the special tail elements

input:
    locals:
        class XXX:
            make_rule_action_for_all_many1_XOTs_iappendright(locals(), ...)
    empty_name:
        e.g. 'Empty_iappendright'
    triples_in_str:
        3 or 6 name per line
        e.g. # OP_join_Args1 = (Arg OP)* Arg
            """
                OP_join_Args1 Arg_OP_pairs0 Arg
                ...
            """
            # below generated by another make_rule_action_...
            # by: ..._for_all_many01_XOAs_iappendright
            #   Arg_OP_pairs0 = Arg_OP_pairs1 | Empty_iappendright
            #   Arg_OP_pairs1 = Arg_OP_pairs0 Arg_OP_pair
            # by: ..._for_all_units
            #   Arg_OP_pair =* +Arg OP


usage:
make_rule_action_for_all_many1_XOTs_iappendright(
    locals
    , """
    ...
    OP_join_Args1 Arg_OP_pairs0 Arg
    ...
    """
    )
==>>
    inject_to = make_rule_inject_to(locals())
    ...
    @inject_to
    def p_(p):
        r'OP_join_Args1 : Arg_OP_pairs0 Arg'
        handle_many1_iappendright(p)
    ...
'''
    inject_to = make_rule_inject_to(locals); del locals
    triples = parse_triples_in_str(triples_in_str)
    basic_make_rule_action_for_all_many1_XOTs_iappendright(
        inject_to, triples)

def basic_make_rule_action_for_all_many1_XOTs_iappendright(
    inject_to, triples
    ):
    for xs1, xs0, x in triples:
        xs1_rule = f'{xs1} : {xs0} {x}'
        @inject_to
        @set_attrs(__doc__=xs1_rule)
        def p_(p, *, f=handle_many1_iappendright):
            f(p)
    return

