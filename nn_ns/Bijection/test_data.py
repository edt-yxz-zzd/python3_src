

__all__ = ['examples']
from fractions import Fraction
from itertools import product

def iter_examples_UIntsNN(n):
    # [UInt]{n}
    assert n >= 0
    if n == 0:
        yield ()
        return
    for i in range(3):
        yield (i,)*n
    yield ((0,1,2)*n)[:n]

def iter_examples_UIntsNM(m, M):
    assert 0 <= m <= M
    for i in range(m, M+1):
        yield from iter_examples_UIntsNN(i)
def examples_UIntsNM(m, M):
    return tuple(iter_examples_UIntsNM(m,M))

examples = \
    { 'PInt0s':
        ((), (1,), (2,), (100,)
        ,(1,1), (2,1), (1,2), (2,2), (3,2)*5
        )
    , 'PInt1s':
        ((1,), (2,), (100,)
        ,(1,1), (2,1), (1,2), (2,2), (3,2)*5
        )
    , '(UInt, PInt)':
        ((0,1), (1,1), (0, 2), (2,1), (1,2), (0,3)
        )
    , 'UInt':
        (0, 1, 2, 100)
    , 'UInt__many':
        tuple(range(10000))
    , 'PInt':
        (1, 2, 3, 101)
    , 'PIntSet':
        tuple(map(frozenset, [[], [1], [2], [1,2], [3], [1,3], [2,3], [1,2,3], range(222, 444)]))
    , 'URational':
        tuple(map(Fraction
            , [0, 1, 1,   1, 2, 4, 997, 325]
            , [1, 1, 2, 100, 1, 3, 234, 10001]
            ))
    , 'Digits_radix3':
        ((), (0,), (1,), (2,), (0,0), (0,1), (0,2), (1,0), (1,1), (1,2)
        , (2,0), (2,1), (2,2), (0,)*3, (1,2)*4, (2,0)*5
        )
    , 'BiDigits_radix2':
        ((), (1,), (2,), (1,1), (1,2), (2,2), (2,1)
        ,(1,)*3, (1,2)*4, (2,1)*5
        )
    , 'BiDigits1s_radix2':
        # ss
            ( ((),), ((1,),), ((2,),)
            , ((1,1),), ((1,2),), ((2,1),), ((2,2),)
            , ((1,1,2)*3,), ((2,2,1)*6,)

            , ((),()), ((1,),()), ((2,),(1,2))
            , ((1,1),()), ((1,2),()), ((2,1),(2,2,1,1,2,1,2,1,1))
            , ((1,1,2)*3, (2,2,1)*6)

            , ((),(),()), ((1,),(),()), ((2,),(1,2),(1,)*6)
            , ((1,1),(),()), ((1,2),(),()), ((2,1),(2,2,1,1,2,1,2,1,1),())
            , ((1,1,2)*3, (2,2,1)*6, ())
            , ((1,1,2)*3, (2,2,1)*6, (1,)*4)

            , ((1,2)*3,)*5
            )
    , 'BiDigits1Ms_mayDigits__R3_M3':
            # bidigit.radix==2; digit.radix==3
            # ss
        ( tuple(map(lambda x: ('left', x),
            ( ((),), ((1,),), ((2,),)
            , ((1,1),), ((1,2),), ((2,1),), ((2,2),)
            , ((1,1,2)*3,), ((2,2,1)*6,)

            , ((),()), ((1,),()), ((2,),(1,2))
            , ((1,1),()), ((1,2),()), ((2,1),(2,2,1,1,2,1,2,1,1))
            , ((1,1,2)*3, (2,2,1)*6)

            , ((),(),()), ((1,),(),()), ((2,),(1,2),(1,)*6)
            , ((1,1),(),()), ((1,2),(),()), ((2,1),(2,2,1,1,2,1,2,1,1),())
            , ((1,1,2)*3, (2,2,1)*6, ())
            , ((1,1,2)*3, (2,2,1)*6, (1,)*4)
            )))
        + tuple(map(lambda x: ('right', x),
            ( (((),(),()) , ())
            , (((),(),()) , (0,))
            , (((),(),()) , (1,))
            , (((),(),()) , (2,))
            , (((),(),()) , (1,2)*5)
            , (((1,),(),()) , ()), (((2,),(1,2),(1,)*6) , (2,2,1,0))
            , (((1,1),(),()) , ()), (((1,2),(),()) , (2,)*3), (((2,1),(2,2,1,1,2,1,2,1,1),()) , ())
            , (((1,1,2)*3, (2,2,1)*6, ()) , ())
            , (((1,1,2)*3, (2,2,1)*6, (1,)*4) , (2,1,0)*3)
            )))
        )
    , 'UInt1s':
        ((0,), (1,), (2,), (100,)
        ,(0,0), (0,1), (1,0), (1,1), (2,1), (1,2), (2,2), (3,2)*5
        , (0,)*433, (0,34)*43
        )
    , 'UInt1_4s': # 1<=len<=4
        ( (0,), (1,), (2,), (1244,)
        , (0,0), (0,1), (1,1), (2,1), (1111,424)
        , (0,0,0), (0,1,0), (0,1,1), (3,2,1), (1111,424,35)
        , (0,0,0,0), (1,1,1,1)
        , (3235, 0,0,0), (0,2,1,0), (0,1,1,1), (3,2,1,1), (35,1111,424,35)
        )

    # m=1,L=3,M=5
    # UInt3_3s, UInt0_3s, UInt4_4s, UInt1_4s, UInt1_5s, UInt4_5s
    , 'UInt4_5s': examples_UIntsNM(4, 5)
    , 'UInt1_5s': examples_UIntsNM(1, 5)
    # exist! , 'UInt1_4s': examples_UIntsNM(1, 4)
    , 'UInt4_4s': examples_UIntsNM(4, 4)
    , 'UInt0_3s': examples_UIntsNM(0, 3)
    , 'UInt3_3s': examples_UIntsNM(3, 3)


    , 'UIntRadixReprLE__R300':
        ((), ((), 1), ((), 2), ((), 100)
        , ((0,), 1), ((0,), 2), ((0,), 100)
        , ((1,), 1), ((1,), 2), ((1,), 100)
        , ((2,), 1), ((2,), 2), ((200,), 100)
        , ((23, 0, 32), 1), ((2,234,299), 2), ((200,3,0, 34,0), 299)
        )
    , 'BiDigitChannels_UIntRadixReprLE_pair__R300N3':
        ( (((), (), ()), ())
        , (((1,), (), ()), ())
        , (((), (1,), ()), ())
        , (((), (), (1,)), ())
        , (((), (), ()), ((), 1))
        , (((), (), ()), ((0,), 1))
        , (((1,), (2,), (3,)), ())
        , (((1,), (2,), (3,)), ((4,), 5))
        , (((1,), (2,), (3,)), ((0,), 5))
        , (((1,201), (2,202)*5, (3,299)*10), ((1,299,0,)*4, 299))
        )
    }

