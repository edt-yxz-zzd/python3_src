r'''
e ../../python3_src/nn_ns/CJK/CJK_struct/CHISE_IDS_67b94ff_20191211/load_parse_result___CHISE_IDS.py


see:
    view ../../python3_src/nn_ns/CJK/CJK_struct/CHISE_IDS_67b94ff_20191211/load_parse_result___CHISE_IDS.py
    view ../../python3_src/nn_ns/CJK/CJK_struct/CHISE_IDS_67b94ff_20191211/parse_result___CHISE_IDS.py
    view ../../python3_src/nn_ns/CJK/CJK_struct/CHISE_IDS_67b94ff_20191211/basic_decomp.txt
      generated by:
        view ../../python3_src/nn_ns/CJK/CJK_struct/CHISE_IDS_67b94ff_20191211/parse_CHISE_IDS.py




nn_ns.CJK.CJK_struct.CHISE_IDS_67b94ff_20191211.load_parse_result___CHISE_IDS
from nn_ns.CJK.CJK_struct.CHISE_IDS_67b94ff_20191211.load_parse_result___CHISE_IDS import load_hz2tree___BMP_only, load_hz2tree___ipath, hz2mutable_tree__to__hz2immutable_tree, hz2mutable_tree__from__hz2immutable_tree, mutable_tree2immutable, mutable_tree5immutable

#'''






__all__ = '''
    load_hz2tree___BMP_only
    load_hz2tree___ipath
    hz2mutable_tree__to__hz2immutable_tree
    hz2mutable_tree__from__hz2immutable_tree
    mutable_tree2immutable
    mutable_tree5immutable
    '''.split()





import nn_ns.CJK.CJK_struct.CHISE_IDS_67b94ff_20191211
from seed.func_tools.fmapT.fmapT__tiny import fmapT__dict, dot
from seed.tiny import MapView
from pathlib import Path
from ast import literal_eval

class _Globals:
    pkg_path = Path(nn_ns.CJK.CJK_struct.CHISE_IDS_67b94ff_20191211.__file__).parent
    ipath = pkg_path / 'basic_decomp.txt'
def load_hz2tree___BMP_only(*, result_readonly):
    hz2tree___BMP_only = load_hz2tree___ipath(_Globals.ipath, result_readonly=result_readonly)
    return hz2tree___BMP_only

def load_hz2tree___ipath(ipath, /, *, result_readonly):
    txt = ipath.read_text(encoding='utf8')
    hz2mutable_tree = literal_eval(txt)

    if result_readonly:
        hz2immutable_tree = hz2mutable_tree__to__hz2immutable_tree(hz2mutable_tree)
        readonly__hz2tree = MapView(hz2immutable_tree)
        hz2tree = readonly__hz2tree
    else:
        hz2tree = hz2mutable_tree

    return hz2tree

def hz2mutable_tree__to__hz2immutable_tree(hz2mutable_tree, /):
    hz2immutable_tree = fmapT__dict(mutable_tree2immutable)(hz2mutable_tree)
    return hz2immutable_tree
def hz2mutable_tree__from__hz2immutable_tree(hz2immutable_tree, /):
    hz2mutable_tree = fmapT__dict(mutable_tree5immutable)(hz2immutable_tree)
    return hz2mutable_tree
def mutable_tree2immutable(tree, /):
    def recur(tree, /):
        case, payload = tree
        if type(payload) is list:
            assert len(case) == 1
            children = payload
            children = tuple(map(recur, children))
            payload = children
            tree = case, payload
        else:
            assert len(case) > 1
            assert type(payload) is str
        return tree
    return recur(tree)
def mutable_tree5immutable(tree, /):
    def recur(tree, /):
        case, payload = tree
        if type(payload) is tuple:
            assert len(case) == 1
            children = payload
            children = list(map(recur, children))
            payload = children
            tree = case, payload
        else:
            assert len(case) > 1
            assert type(payload) is str
        return tree
    return recur(tree)




from nn_ns.CJK.CJK_struct.CHISE_IDS_67b94ff_20191211.load_parse_result___CHISE_IDS import load_hz2tree___BMP_only, load_hz2tree___ipath, hz2mutable_tree__to__hz2immutable_tree, hz2mutable_tree__from__hz2immutable_tree, mutable_tree2immutable, mutable_tree5immutable

