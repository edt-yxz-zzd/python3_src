plantri
  http://users.cecs.anu.edu.au/~bdm/plantri/

[[[
统计信息
view /sdcard/0my_files/git_repos/python3_src/nn_ns/graph/adc3m3/'-adc3m3[4, 6, 8].txt'

4 bcd,adc,abd,acb
6 bcd,aef,afd,ace,bdf,bec
8 bcd,aef,afg,agh,bhf,bec,chd,dge
8 bcd,aef,afg,age,bdh,bhc,chd,egf

num_edges = num_vertices *3/2
    # 39 = 26 *3/2
num_vertices2num_graphs = \
    {4:1
    ,6:1
    ,8:2
    ,10:5
    ,12:14
    ,14:50
    ,16:233
    ,18:1249
    ,20:7595
    ,22:49566
    ,24:339722
    #total=398438
    ,26:2406841
    #total=2805279
    }
$ echo $[398438+2406841]
2805279

# unicode total: 0x11_0000 == 1114112
    -adc3m3[26].txt
        247 MB (259,938,828 bytes)
        2406841 cubic graphs
    -adc3m3[4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24].txt
        37.4 MB (39,285,084 bytes)
        398438 cubic graphs
#
]]]




[[[
使用
cd ~/src/plantri50
view ../../python3_src/c_external/plantri/plantri-doc/plantri-guide.txt
view ../../python3_src/nn_ns/graph/adc3m3/how to generate data.txt

cd ~/src/plantri50
./plantri --help
  Plantri version 5.0 - Oct 1, 2015
  Usage: ./plantri [-uagsEh -Ac#txm#P#bpe#f#q -odGV -v] n [res/mod] [outfile]
  See plantri-guide.txt for more information.

view ../../python3_src/c_external/plantri/plantri-doc/plantri-guide.txt
  output format:
    -g graph6
    -s sparse6
    -a ascii

cd /data/data/com.termux/files/home/src/plantri50/plantri50@termux@armv7l-unknown-linux-gnueabi/
./plantri -adc3m3 4d
  4 bcd,adc,abd,acb

./plantri -gdc3m3 4d
  C~


#cmd.exe: for /L %i in (4,2,16) do echo %i
#bash:
for i in {4..16..2} ; do echo $i ; done
for i in {4..16..2} ; do echo $i ; done > ~/tmp/-sdc3m3[4d-16d].s6s
view ~/tmp/-sdc3m3[4d-16d].s6s

for i in {4..16..2} ; do ./plantri -sdc3m3 ${i}d ; done > ~/tmp/-sdc3m3[4d-16d].s6s
view ~/tmp/-sdc3m3[4d-16d].s6s
for i in {4..16..2} ; do ./plantri -adc3m3 ${i}d ; done > ~/tmp/-adc3m3[4d-16d].txt
view ~/tmp/-adc3m3[4d-16d].txt
diff ~/tmp/-adc3m3[4d-16d].txt /sdcard/0my_files/git_repos/python3_src/nn_ns/graph/adc3m3_from4to18d.txt


cd /data/data/com.termux/files/home/src/plantri50/plantri50@termux@armv7l-unknown-linux-gnueabi/
for i in {4..20..2} ; do ./plantri -adc3m3 ${i}d ; done > ~/tmp/plantri~-adc3m3~4d-20d.txt
    726 KB
]]]

[[[
安装
======
cd /sdcard/0my_files/git_repos/python3_src/c_external/plantri/
tar xvzf plantri50.tar.gz -C ~/src/
cd ~/src/plantri50
make
  成功！无./configure





==================
======复制 善后
ls -t
ls -t === ls --sort=time
  fullgen
  plantri
  adj4.c #below are src
  ...
  ...


mkdir plantri50@termux@armv7l-unknown-linux-gnueabi
cp -t ./plantri50@termux@armv7l-unknown-linux-gnueabi/    ./fullgen  ./plantri
7z a ./plantri50@termux@armv7l-unknown-linux-gnueabi.7z    ./plantri50@termux@armv7l-unknown-linux-gnueabi/
cp -t /sdcard/0my_files/git_repos/python3_src/c_external/plantri/ ./plantri50@termux@armv7l-unknown-linux-gnueabi.7z


]]]


[[[
plantri主页

===== http://users.cecs.anu.edu.au/~bdm/plantri/


plantri and fullgen

plantri and fullgen are programs for generation of certain types of planar graph.

The authors are Gunnar Brinkmann (University of Ghent) and Brendan McKay (Australian National University).

Graphs are generated in such a way that exactly one member of each isomorphism class is output without the need for storing them. The speed of generation is more than 1,000,000 graphs per second in many cases, so extremely large classes of graph can be exhaustively listed.
plantri (Version 5.0; January 30, 2018)

The graph classes generated by plantri include:

    Planar triangulations
        connectivity 1, 2, 3, 4 or 5
        minimum degree 3, 4 or 5
        eulerian with connectivity 3 or 4
    Planar quadrangulations
        arbitrary simple
        3-connected
        minimum degree 3 and simple
        3-connected, no non-facial 4-cycles
    Planar simple graphs
        connectivity 1, 2, 3 or 4
        minimum degree 1, 2, 3, 4 or 5
    Planar simple bipartite graphs
        connectivity 1, 2 or 3
        minimum degree 1, 2, or 3
    Triangulations of a disk
        connectivity 2 or 3
        minimum degree 2 or 3
    Planar cubic graphs
        connectivity 1, 2, or 3
        connectivity 1, 2, or 3
        girth 3, 4 or 5
        cyclic connectivity 3, 4 or 5
        bipartite with cyclic connectivity 3 or 4
    Planar quartic graphs
        3-connected simple
        4-edge-connected simple
        4-edge-connected
        3-connected, 6-cyclically-edge-connected
    Appolonian triangulations

For more details, see the manual.
fullgen

The program fullgen generates fullerenes, which are planar cubic graphs having only faces of size 5 or 6.

There is also an option for forbidding adjacent pentagons.

For more details, see the manual.

This version corrects an error that caused some fullerenes to be missed starting at 136 vertices, or from 254 vertices in the case of IPR fullerenes, and an error in the counts by automorphism group.
Download the programs

The programs are written in C and are free for all purposes other than sale for profit. However, they remain subject to our copyright and are not "public domain".

They should compile with any modern C compiler and do not need any special libraries. However, they are mostly tested under UNIX.

plantri and fullgen are distributed together as a gzipped tar file (Version 5.0).


Related papers

G. Brinkmann and B. D. McKay, Fast generation of planar graphs (expanded edition): PDF file.
  http://users.cecs.anu.edu.au/~bdm/papers/plantri-full.pdf
    fast generation of planar graphs (expanded)(McKay).pdf

G. Brinkmann, S. Greenberg, C. Greenhill, B. D. McKay, R. Thomas and P. Wollan, Generation of simple quadrangulations of the sphere: PDF file. (Discrete Mathematics, 305 (2005) 33-54).
  http://users.cecs.anu.edu.au/~bdm/plantri/quad.pdf
    generation of simple quadrangulations of the sphere (2005)(McKay).pdf

G. Brinkmann and B. D. McKay, Construction of planar triangulations with minimum degree 5: PDF file. (Discrete Mathematics, 301 (2005) 147-163.)
  http://users.cecs.anu.edu.au/~bdm/plantri/min5paper_sc.pdf
    construction of planar triangulations with minimum degree 5 (2005)(McKay).pdf


Related programs

Buckygen is another program for generating fullerenes, written by Jan Goedgebeur with input from Gunnar Brinkmann, Mahdieh Hasheminezhad, and Brendan McKay. It has fewer features than fullgen but is considerably faster. It is available here.

Thom Sulanke has written a program surftri for generating triangulations of surfaces of higher genus, including non-orientable surfaces. It is available here.
Contact the authors

Gunnar Brinkmann: Gunnar.Brinkmann@ugent.be
Brendan McKay: bdm@cs.anu.edu.au    http://cs.anu.edu.au/~bdm







]]]


